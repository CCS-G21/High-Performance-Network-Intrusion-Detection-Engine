import socket
from scapy.all import ARP, Ether, srp

# Known vulnerable ports (example list, can be expanded)
vulnerable_ports = {
    21: "FTP - Vulnerable to Brute Force",
    22: "SSH - Check for weak credentials",
    23: "Telnet - Vulnerable to interception",
    80: "HTTP - Check for outdated software",
    443: "HTTPS - Verify certificate and configurations",
    3389: "RDP - Check for unauthorized access",
}

def scan_network(ip_range):
    print(f"Scanning the network: {ip_range}\n")
    
    # Create an ARP request
    arp_request = ARP(pdst=ip_range)
    broadcast = Ether(dst="ff:ff:ff:ff:ff:ff")
    arp_request_broadcast = broadcast / arp_request

    # Send the packet and receive responses
    answered_list = srp(arp_request_broadcast, timeout=2, verbose=False)[0]

    # Parse and display the results
    devices = []
    for sent, received in answered_list:
        devices.append({'ip': received.psrc, 'mac': received.hwsrc})

    return devices

def scan_ports(ip, ports):
    open_ports = []
    for port in ports:
        try:
            # Create a socket
            sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            sock.settimeout(1)
            
            # Attempt to connect to the port
            result = sock.connect_ex((ip, port))
            if result == 0:
                open_ports.append(port)
            sock.close()
        except Exception as e:
            pass
    return open_ports

def detect_vulnerabilities(ip, open_ports):
    vulnerabilities = []
    for port in open_ports:
        if port in vulnerable_ports:
            vulnerabilities.append((port, vulnerable_ports[port]))
    return vulnerabilities

def main():
    # Example: Replace '192.168.0.1/24' with your network's IP range
    target_ip_range = "192.168.0.1/24"
    
    print("==== Network Vulnerability Scanner ====\n")
    devices = scan_network(target_ip_range)
    
    if not devices:
        print("No devices found on the network.")
        return
    
    print("Active devices detected:")
    print("IP Address\t\tMAC Address")
    print("-" * 40)
    for device in devices:
        print(f"{device['ip']}\t\t{device['mac']}")
    print("\nStarting vulnerability scan...\n")
    
    for device in devices:
        ip = device['ip']
        print(f"Scanning {ip} for open ports...")
        open_ports = scan_ports(ip, range(1, 1025))  # Scan ports 1-1024
        if open_ports:
            print(f"  Open ports detected: {open_ports}")
            vulnerabilities = detect_vulnerabilities(ip, open_ports)
            if vulnerabilities:
                print(f"  Vulnerabilities found:")
                for port, description in vulnerabilities:
                    print(f"    Port {port}: {description}")
            else:
                print("  No known vulnerabilities detected.")
        else:
            print("  No open ports detected.")
        print("-" * 40)
    
    print("==== Scan Complete ====")

if __name__ == "__main__":
    main()
